Symfony 2.7.48
**************

Stack (symfony 2.7.48 / php 7.1.9 / composer 1.5.2)

Dans ce framework tout est bundle (paquet, brique...), l'application, les composants externes et même la distribution standard.

Un bundle peut servir à tout. On écrira les nôtres pour y inclure notre code métier.
Bundles notables:
	+ FosUserBundle: il fournit une gestion d'utilisateur complète (inscription, connexion, mdp perdu...)
	+ SonataAdminBundle: il génère facilement les pages de l'interface d'administration à partir du modèle de données  
	  utilisé.
	+ FosRestBundle: il simplifie la mise en oeuvre d'API REST dans les applications
	+ KnpPaginatorBundle: il simplifie et uniformise la gestion des tris et de la pagination des données sous toutes leurs formes.

NB: Sources de bundles http://knpbundles.com/

Un bundle vit en autonomie
On doit penser un bundle de manière totalement autonome et on doit le configurer dans l'application pour le faire fonctionner avec les autres.
Implication: 2 bundles ne peuvent partager des classes ou des informations...

Création d'un bundle: php app/console generate:bundle

Fichier de mapping (nomDuBundle/Resource/config/routing.yml) -> définition des routes...
Une route fait la correspondance entre une URL et un contrôleur à appeler.

Le profiler -> géré par le webProfilerBundle (possède ses propres routes)

Résolution des problèmes
************************

Problème relatif aux bundles (err: Attemp to load class  ... kernel)
--------------------------------------------------------------------
Dans composer.json: "": "/src"
puis composer dump-autoload et composer install

"AppBundle\\": "src/AppBundle",
"TechCorpFrontBundle\\": "src/TechCorp/FrontBundle",

Problème relatif aux routes (Not route found for ...)
----------------------------------------------------
"No route found for "GET /dsz/hello"
Il manquait le renseignement du paramètre name...

Revolute ... alias adresse mail

Vider le cache 
manuellement -> delete folder app/cache/dev
sinon php app\console cache:clear (en prod on ajoute --env=prod)

SwiftMailer dépendance envoi de mail

php app/console doctrine:generate:entity
	-> génération d'une entité
php app/console doctrine:database:create
	-> créer la database
php app/console doctrine:schema:update --dump-sql
	-> requête sql du différentiel entre la base et les entités
php app/console doctrine:schema:update --force
	-> exécute la dite requête

php app/console doctrine:generate:entities SdzBlogBundle:Article
	-> modification d'une entité
	-> génère les getters et les setters

Le service Doctrine 2
	$doctrine = $this->get('doctrine');
		ou
	$doctrine = $this->getDoctrine();

Le service EntityManager
	$em = $this->getDoctrine()->getManager();
		ou
	$em = $this->get('doctrine.orm.entity_manager');

Les services Repository
	$em = $this->getDoctrine()->getManager();
	$repositoryArticle = $em->getRepository('SdzBlogBundle:Article');
		ou
	$repositoryArticle = $em->getRepository('Sdz\BlogBundle\Entity\Article');	

